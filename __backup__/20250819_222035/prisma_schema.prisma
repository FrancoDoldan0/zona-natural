generator client { provider = "prisma-client-js" }
datasource db { provider = "sqlite"; url = env("DATABASE_URL") }

model AdminUser { id Int @id @default(autoincrement()) email String @unique passwordHash String lastLoginAt DateTime? createdAt DateTime @default(now()) updatedAt DateTime @updatedAt }
model Category  { id Int @id @default(autoincrement()) name String slug String @unique createdAt DateTime @default(now()) updatedAt DateTime @updatedAt subcats Subcategory[] products Product[] }
model Subcategory { id Int @id @default(autoincrement()) name String slug String @unique categoryId Int category Category @relation(fields: [categoryId], references: [id]) createdAt DateTime @default(now()) updatedAt DateTime @updatedAt products Product[] }
model Product { id Int @id @default(autoincrement()) name String slug String @unique description String? price Float? sku String? status String @default("ACTIVE") categoryId Int? category Category? @relation(fields: [categoryId], references: [id]) subcategoryId Int? subcategory Subcategory? @relation(fields: [subcategoryId], references: [id]) images ProductImage[] productTags ProductTag[] createdAt DateTime @default(now()) updatedAt DateTime @updatedAt }
model ProductImage { id Int @id @default(autoincrement()) productId Int product Product @relation(fields: [productId], references: [id]) url String alt String? order Int @default(0) }
model Tag { id Int @id @default(autoincrement()) name String @unique productTags ProductTag[] }
model ProductTag { productId Int tagId Int product Product @relation(fields: [productId], references: [id]) tag Tag @relation(fields: [tagId], references: [id]) @@id([productId, tagId]) }
enum DiscountType { PERCENT AMOUNT }
model Banner { id Int @id @default(autoincrement()) title String imageUrl String link String? active Boolean @default(true) "order" Int @default(0) createdAt DateTime @default(now()) updatedAt DateTime @updatedAt }
model Offer { id Int @id @default(autoincrement()) title String description String? discountType DiscountType discountVal Float startAt DateTime? endAt DateTime? productId Int? categoryId Int? tagId Int? product Product? @relation(fields: [productId], references: [id]) category Category? @relation(fields: [categoryId], references: [id]) tag Tag? @relation(fields: [tagId], references: [id]) createdAt DateTime @default(now()) updatedAt DateTime @updatedAt }